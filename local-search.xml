<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>git常用命令</title>
    <link href="/2023/10/16/git/"/>
    <url>/2023/10/16/git/</url>
    
    <content type="html"><![CDATA[<h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><p>创建一个新的 git 版本库。这个版本库的配置、存储等信息会被保存到.git 文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 初始化当前项目</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git init</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 新建一个目录，将其初始化为Git代码库</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git init [project-name]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 在指定目录创建一个空的 Git 仓库。运行这个命令会创建一个名为 directory，只包含 .git 子目录的空目录。</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git init --bare &lt;directory&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 下载一个项目和它的整个代码历史</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 这个命令就是将一个版本库拷贝到另一个目录中，同时也将分支都拷贝到新的版本库中。这样就可以在新的版本库中提交到远程分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">clone</span> [url]</span><br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>更改设置。可以是版本库的设置，也可以是系统的或全局的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 显示当前的Git配置</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">list</span><br><br><span class="hljs-comment"># 编辑Git配置文件</span><br><span class="hljs-variable">$ git config </span>-e [--<span class="hljs-keyword">global</span>]<br><br><span class="hljs-comment"># 输出、设置基本的全局变量</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> user.email<br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> user.name<br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> user.email <span class="hljs-string">&quot;MyEmail@gmail.com&quot;</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> user.name <span class="hljs-string">&quot;My Name&quot;</span><br><br><span class="hljs-comment"># 定义当前用户所有提交使用的作者邮箱。</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> alias.&lt;alias-name&gt; &lt;git-command&gt;<br><br><span class="hljs-comment"># 为Git命令创建一个快捷方式（别名）。</span><br><span class="hljs-variable">$ git config </span>--system core.editor &lt;editor&gt;<br></code></pre></td></tr></table></figure><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><p>git 内置了对命令非常详细的解释，可以供我们快速查阅</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查找可用命令</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查找所有可用命令</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span> -a</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 在文档当中查找特定的命令</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> git <span class="hljs-built_in">help</span> &lt;命令&gt;</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span> add</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span> commit</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span> init</span><br></code></pre></td></tr></table></figure><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><p>显示索引文件（也就是当前工作空间）和当前的头指针指向的提交的不同</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示分支，未跟踪文件，更改和其他不同</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git status</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看其他的git status的用法</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">help</span> status</span><br></code></pre></td></tr></table></figure><h2 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h2><p>获取某些文件，某些分支，某次提交等 git 信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示commit历史，以及每次commit发生变更的文件</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> --<span class="hljs-built_in">stat</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 搜索提交历史，根据关键词</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -S [keyword]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> [tag] HEAD --pretty=format:%s</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某个commit之后的所有变动，其<span class="hljs-string">&quot;提交说明&quot;</span>必须符合搜索条件</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> [tag] HEAD --grep feature</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某个文件的版本历史，包括文件改名</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> --follow [file]$ git whatchanged [file]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示指定文件相关的每一次diff</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -p [file]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示过去5次提交</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -5 --pretty --oneline</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示所有提交过的用户，按提交次数排序</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git shortlog -sn</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示指定文件是什么人在什么时间修改过</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git blame [file]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示暂存区和工作区的差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示暂存区和上一个commit的差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff --cached [file]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示工作区与当前分支最新commit之间的差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff HEAD</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示两次提交之间的差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff [first-branch]...[second-branch]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示今天你写了多少行代码</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff --shortstat <span class="hljs-string">&quot;@&#123;0 day ago&#125;&quot;</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 比较暂存区和版本库差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff --staged</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 比较暂存区和版本库差异</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff --cached</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 仅仅比较统计信息</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git diff --<span class="hljs-built_in">stat</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某次提交的元数据和内容变化</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git show [commit]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某次提交发生变化的文件</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git show --name-only [commit]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某次提交时，某个文件的内容</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git show [commit]:[filename]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示当前分支的最近几次提交</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git reflog</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看远程分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git br -r</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 创建新的分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git br &lt;new_branch&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看各个分支最后提交信息</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git br -v</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看已经被合并到当前分支的分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git br --merged</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看尚未被合并到当前分支的分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git br --no-merged</span><br></code></pre></td></tr></table></figure><h2 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h2><p>添加文件到当前工作空间中。如果你不使用 <code>git add</code> 将文件添加进去，那么这些文件也不会添加到之后的提交之中</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 添加一个文件</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> test.js</span><br><br><span class="hljs-comment"># 添加一个子目录中的文件</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> /path/to/file/test.js</span><br><br><span class="hljs-comment"># 支持正则表达式</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> ./*.js</span><br><br><span class="hljs-comment"># 添加指定文件到暂存区</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> [file1] [file2] ...</span><br><br><span class="hljs-comment"># 添加指定目录到暂存区，包括子目录</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> [<span class="hljs-built_in">dir</span>]</span><br><br><span class="hljs-comment"># 添加当前目录的所有文件到暂存区</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> .</span><br><br><span class="hljs-comment"># 添加每个变化前，都会要求确认</span><br><span class="hljs-comment"># 对于同一个文件的多处变化，可以实现分次提交</span><br>$ git <span class="hljs-keyword">add</span><span class="language-bash"> -p</span><br></code></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>rm 和上面的 add 命令相反，从工作空间中去掉某个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 移除 HelloWorld.js</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">rm</span> HelloWorld.js</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 移除子目录中的文件</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">rm</span> /pather/to/the/file/HelloWorld.js</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">rm</span> [file1] [file2] ...</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">rm</span> --cached [file]</span><br></code></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p>管理分支，可以通过下列命令对分支进行增删改查切换等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 查看所有的分支和远程分支</span><br><span class="hljs-variable">$ git branch </span>-a<br><br><span class="hljs-comment"># 创建一个新的分支</span><br><span class="hljs-variable">$ git branch </span>[branch-name]<br><br><span class="hljs-comment"># 重命名分支</span><br><span class="hljs-comment"># git branch -m &lt;旧名称&gt; &lt;新名称&gt;</span><br><span class="hljs-variable">$ git branch </span>-m [branch-name] [<span class="hljs-keyword">new</span>-branch-name]<br><br><span class="hljs-comment"># 编辑分支的介绍</span><br><span class="hljs-variable">$ git branch </span>[branch-name] --edit-description<br><br><span class="hljs-comment"># 列出所有本地分支</span><br><span class="hljs-variable">$ git branch</span><br><br><span class="hljs-comment"># 列出所有远程分支</span><br><span class="hljs-variable">$ git branch </span>-r<br><br><span class="hljs-comment"># 新建一个分支，但依然停留在当前分支</span><br><span class="hljs-variable">$ git branch </span>[branch-name]<br><br><span class="hljs-comment"># 新建一个分支，并切换到该分支</span><br><span class="hljs-variable">$ git checkout </span>-b [branch]<br><br><span class="hljs-comment"># 新建一个分支，指向指定commit</span><br><span class="hljs-variable">$ git branch </span>[branch] [commit]<br><br><span class="hljs-comment"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="hljs-variable">$ git branch </span>--track [branch] [remote-branch]<br><br><span class="hljs-comment"># 切换到指定分支，并更新工作区</span><br><span class="hljs-variable">$ git checkout </span>[branch-name]<br><br><span class="hljs-comment"># 切换到上一个分支</span><br><span class="hljs-variable">$ git checkout </span>-<br><br><span class="hljs-comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="hljs-variable">$ git branch </span>--set-upstream [branch] [remote-branch]<br><br><span class="hljs-comment"># 合并指定分支到当前分支</span><br><span class="hljs-variable">$ git merge </span>[branch]<br><br><span class="hljs-comment"># 选择一个commit，合并进当前分支</span><br><span class="hljs-variable">$ git cherry</span>-pick [commit]<br><br><span class="hljs-comment"># 删除分支</span><br><span class="hljs-variable">$ git branch </span>-d [branch-name]<br><br><span class="hljs-comment"># 删除远程分支</span><br><span class="hljs-variable">$ git push origin </span>--delete [branch-name]<br><span class="hljs-variable">$ git branch </span>-dr [remote/branch]<br><br><span class="hljs-comment"># 切换到某个分支</span><br><span class="hljs-variable">$ git co </span>&lt;branch&gt;<br><br><span class="hljs-comment"># 创建新的分支，并且切换过去</span><br><span class="hljs-variable">$ git co </span>-b &lt;new_branch&gt;<br><br><span class="hljs-comment"># 基于branch创建新的new_branch</span><br><span class="hljs-variable">$ git co </span>-b &lt;new_branch&gt; &lt;branch&gt;<br><br><span class="hljs-comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span><br><span class="hljs-variable">$ git co</span> <span class="hljs-variable">$id</span><br><br><span class="hljs-comment"># 把某次历史提交记录checkout出来，创建成一个分支</span><br><span class="hljs-variable">$ git co</span> <span class="hljs-variable">$id </span>-b &lt;new_branch&gt;<br><br><span class="hljs-comment"># 删除某个分支</span><br><span class="hljs-variable">$ git br </span>-d &lt;branch&gt;<br><br><span class="hljs-comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span><br><span class="hljs-variable">$ git br </span>-D &lt;branch&gt;<br></code></pre></td></tr></table></figure><h2 id="检出"><a href="#检出" class="headerlink" title="检出"></a>检出</h2><p>将当前工作空间更新到索引所标识的或者某一特定的工作空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 检出一个版本库，默认将更新到master分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git checkout</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 检出到一个特定的分支</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git checkout branchName</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 新建一个分支，并且切换过去，相当于<span class="hljs-string">&quot;git branch &lt;名字&gt;; git checkout &lt;名字&gt;&quot;</span></span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git checkout -b newBranch</span><br></code></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><p>远程同步的远端分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 下载远程仓库的所有变动</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git fetch [remote]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示所有远程仓库</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote -v</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某个远程仓库的信息</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote show [remote]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 增加一个新的远程仓库，并命名</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote add [shortname] [url]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看远程服务器地址和仓库名称</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote -v</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 添加远程仓库地址</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote add origin git@ github:xxx/xxx.git</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 设置远程仓库地址(用于修改远程仓库地址)</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote set-url origin git@ github.com:xxx/xxx.git</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 删除远程仓库</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git remote <span class="hljs-built_in">rm</span> &lt;repository&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 上传本地指定分支到远程仓库</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 把本地的分支更新到远端origin的master分支上</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> git push &lt;远端&gt; &lt;分支&gt;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> git push 相于 git push origin master</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git push [remote] [branch]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git push [remote] --force</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 推送所有分支到远程仓库</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git push [remote] --all</span><br></code></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-comment"># 恢复暂存区的指定文件到工作区</span><br><span class="hljs-variable">$ </span>git checkout [file]<br><br><span class="hljs-comment"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="hljs-variable">$ </span>git checkout [commit] [file]<br><br><span class="hljs-comment"># 恢复暂存区的所有文件到工作区</span><br><span class="hljs-variable">$ </span>git checkout .<br><br><span class="hljs-comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="hljs-variable">$ </span>git reset [file]<br><br><span class="hljs-comment"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="hljs-variable">$ </span>git reset --hard<br><br><span class="hljs-comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="hljs-variable">$ </span>git reset [commit]<br><br><span class="hljs-comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="hljs-variable">$ </span>git reset --hard [commit]<br><br><span class="hljs-comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="hljs-variable">$ </span>git reset --keep [commit]<br><br><span class="hljs-comment"># 新建一个commit，用来撤销指定commit</span><br><span class="hljs-comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="hljs-variable">$ </span>git revert [commit]<br><br><span class="hljs-comment"># 恢复最后一次提交的状态</span><br><span class="hljs-variable">$ </span>git revert HEAD<br><br><span class="hljs-comment"># 暂时将未提交的变化移除，稍后再移入</span><br><span class="hljs-variable">$ </span>git stash<span class="hljs-variable">$ </span>git stash pop<br><br><span class="hljs-comment"># 列所有stash</span><br><span class="hljs-variable">$ </span>git stash list<br><br><span class="hljs-comment"># 恢复暂存的内容</span><br><span class="hljs-variable">$ </span>git stash apply<br><br><span class="hljs-comment"># 删除暂存区</span><br><span class="hljs-variable">$ </span>git stash drop<br></code></pre></td></tr></table></figure><h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><p>将当前索引的更改保存为一个新的提交，这个提交包括用户做出的更改与信息</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-comment"># 提交暂存区到仓库区附带提交信息</span><br><span class="hljs-variable">$ </span>git commit -m [message]<br><br><span class="hljs-comment"># 提交暂存区的指定文件到仓库区</span><br><span class="hljs-variable">$ </span>git commit [file1] [file2] ... -m [message]<br><br><span class="hljs-comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="hljs-variable">$ </span>git commit -a<br><br><span class="hljs-comment"># 提交时显示所有diff信息</span><br><span class="hljs-variable">$ </span>git commit -v<br><br><span class="hljs-comment"># 使用一次新的commit，替代上一次提交</span><br><span class="hljs-comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="hljs-variable">$ </span>git commit --amend -m [message]<br><br><span class="hljs-comment"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="hljs-variable">$ </span>git commit --amend [file1] [file2] ...<br></code></pre></td></tr></table></figure><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><p>显示当前工作空间和提交的不同</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 显示工作目录和索引的不同</span><br><span class="hljs-variable">$</span> git <span class="hljs-built_in">diff</span><br><br><span class="hljs-comment"># 显示索引和最近一次提交的不同</span><br><span class="hljs-variable">$</span> git <span class="hljs-built_in">diff</span> <span class="hljs-literal">--cached</span><br><br><span class="hljs-comment"># 显示工作目录和最近一次提交的不同</span><br><span class="hljs-variable">$</span> git <span class="hljs-built_in">diff</span> HEAD<br></code></pre></td></tr></table></figure><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>可以在版本库中快速查找</p><p>可选配置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 感谢Travis Jeffery提供的以下用法：</span><br><span class="hljs-comment"># 在搜索结果中显示行号</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> grep.lineNumber <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 是搜索结果可读性更好</span><br><span class="hljs-variable">$ git config </span>--<span class="hljs-keyword">global</span> alias.g <span class="hljs-string">&quot;grep --break --heading --line-number&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"># 在所有的java中查找variableName$ git <span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;variableName&#x27;</span> -- <span class="hljs-string">&#x27;*.java&#x27;</span><br># 搜索包含 <span class="hljs-string">&quot;arrayListName&quot;</span> 和, <span class="hljs-string">&quot;add&quot;</span> 或 <span class="hljs-string">&quot;remove&quot;</span> 的所有行<br>$ git <span class="hljs-keyword">grep</span> -<span class="hljs-keyword">e</span> <span class="hljs-string">&#x27;arrayListName&#x27;</span> --<span class="hljs-built_in">and</span> \( -<span class="hljs-keyword">e</span> <span class="hljs-built_in">add</span> -<span class="hljs-keyword">e</span> <span class="hljs-built_in">remove</span> \)<br></code></pre></td></tr></table></figure><h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><p>显示这个版本库的所有提交</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示所有提交</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 显示某几条提交信息</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -n 10</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 仅显示合并提交</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> --merges</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看该文件每次提交记录</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> &lt;file&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看每次详细修改内容的diff</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -p &lt;file&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看最近两次详细修改内容的diff</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> -p -2</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看提交统计信息</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">log</span> --<span class="hljs-built_in">stat</span></span><br></code></pre></td></tr></table></figure><h2 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h2><p>合并就是将外部的提交合并到自己的分支中</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment"># 将其他分支合并到当前分支</span><br>$ git <span class="hljs-built_in">merge</span> branchName<br><br><span class="hljs-comment"># 在合并时创建一个新的合并后的提交</span><br><span class="hljs-comment"># 不要 Fast-Foward 合并，这样可以生成 merge 提交</span><br>$ git <span class="hljs-built_in">merge</span> <span class="hljs-comment">--no-ff branchName</span><br></code></pre></td></tr></table></figure><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>重命名或移动一个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 重命名</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">mv</span> test.js test2.js</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 移动</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">mv</span> test.js ./new/path/test.js</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 改名文件，并且将这个改名放入暂存区</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">mv</span> [file-original] [file-renamed]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 强制重命名或移动<span class="hljs-comment"># 这个文件已经存在，将要覆盖掉</span></span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git <span class="hljs-built_in">mv</span> -f myFile existingFile</span><br></code></pre></td></tr></table></figure><h2 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 列出所有tag</span><br>$ git <span class="hljs-keyword">tag</span><br><br><span class="hljs-title"># 新建一个tag</span>在当前commit<br>$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>]<br><br><span class="hljs-comment"># 新建一个tag在指定commit</span><br>$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>] [commit]<br><br><span class="hljs-comment"># 删除本地tag</span><br>$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">-d</span> [<span class="hljs-keyword">tag</span>]<br><br><span class="hljs-comment"># 删除远程tag</span><br>$ git push origin :refs/tags/[tagName]<br><br><span class="hljs-comment"># 查看tag信息</span><br>$ git show [<span class="hljs-keyword">tag</span>]<br><br><span class="hljs-comment"># 提交指定tag</span><br>$ git push [remote] [<span class="hljs-keyword">tag</span>]<br><br><span class="hljs-comment"># 提交所有tag$ git push [remote] --tags</span><br><span class="hljs-comment"># 新建一个分支，指向某个tag</span><br>$ git checkout -b [branch] [<span class="hljs-keyword">tag</span>]<br></code></pre></td></tr></table></figure><h2 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h2><p>从远端版本库合并到当前分支</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 从远端origin的master分支更新版本库</span><br><span class="hljs-comment"># git pull &lt;远端&gt; &lt;分支&gt;</span><br>$ git pull origin <span class="hljs-keyword">master</span><br><br><span class="hljs-title"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span><br><span class="hljs-title">$</span> git pull --no-ff<br></code></pre></td></tr></table></figure><h2 id="ci"><a href="#ci" class="headerlink" title="ci"></a>ci</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">$ git <span class="hljs-keyword">ci</span> &lt;<span class="hljs-keyword">file</span>&gt;<br>$ git <span class="hljs-keyword">ci</span> .<br># 将git add, git <span class="hljs-keyword">rm</span>和git <span class="hljs-keyword">ci</span>等操作都合并在一起做<br>$ git <span class="hljs-keyword">ci</span> -a$ git <span class="hljs-keyword">ci</span> -am <span class="hljs-string">&quot;some comments&quot;</span><br># 修改最后一次提交记录<br>$ git <span class="hljs-keyword">ci</span> --amend<br></code></pre></td></tr></table></figure><h2 id="rebase-谨慎使用"><a href="#rebase-谨慎使用" class="headerlink" title="rebase (谨慎使用)"></a>rebase (谨慎使用)</h2><p>将一个分支上所有的提交历史都应用到另一个分支上<em>不要在一个已经公开的远端分支上使用 rebase</em>.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 将experimentBranch应用到master上面</span><br><span class="hljs-comment"># git rebase &lt;basebranch&gt; &lt;topicbranch&gt;</span><br>$ git rebase <span class="hljs-keyword">master</span> <span class="hljs-title">experimentBranch</span><br></code></pre></td></tr></table></figure><h2 id="reset-谨慎使用"><a href="#reset-谨慎使用" class="headerlink" title="reset (谨慎使用)"></a>reset (谨慎使用)</h2><p>将当前的头指针复位到一个特定的状态。这样可以使你撤销 merge、pull、commits、add 等 这是个很强大的命令，但是在使用时一定要清楚其所产生的后果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 使 staging 区域恢复到上次提交时的状态，不改变现在的工作目录</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git reset</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 使 staging 区域恢复到上次提交时的状态，覆盖现在的工作目录</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git reset --hard</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 将当前分支恢复到某次提交，不改变现在的工作目录</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 在工作目录中所有的改变仍然存在</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git reset dha78as</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 将当前分支恢复到某次提交，覆盖现在的工作目录<span class="hljs-comment"># 并且删除所有未提交的改变和指定提交之后的所有提交</span></span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git reset --hard dha78as</span><br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"> 生成一个可供发布的压缩包</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git archive</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 打补丁</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git apply ../sync.patch</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 测试补丁能否成功</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git apply --check ../sync.patch</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"> 查看Git的版本</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"> git --version</span><br></code></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p>常用 Git 命令清单: <a href="https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html">https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></p></li><li><p>Linux、MySQL、Nginx、PHP、Git、Shell 等笔记: <a href="https://github.com/guanguans/notes">https://github.com/guanguans/notes</a></p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux JDK环境配置</title>
    <link href="/2023/10/16/ubuntu-jdk-environment/"/>
    <url>/2023/10/16/ubuntu-jdk-environment/</url>
    
    <content type="html"><![CDATA[<p>1.在&#x2F;etc&#x2F;profile文件最后添加以下内容</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#set oracle jdk environment</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/opt/jdk/jdk1.8.0_171/<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre  <br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib  <br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH <br></code></pre></td></tr></table></figure><p>JAVA_HOME设置为JDK解压目录<br>2.执行<code>source /etc/profile</code> 重新加载配置</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>下载旧版本JDK</title>
    <link href="/2023/10/16/jdk-oldversion/"/>
    <url>/2023/10/16/jdk-oldversion/</url>
    
    <content type="html"><![CDATA[<p>一、打开Oracle Java下载<a href="https://www.oracle.com/cn/java/technologies/downloads/">链接</a><br>二、选择“Java archive”<br><img src="https://pic.imgdb.cn/item/652d2a04c458853aefd77564.jpg"><br>三、网页下移，找到需要的版本，例如jdk8<br><img src="https://pic.imgdb.cn/item/652d2a04c458853aefd775e9.jpg"><br>四、网页下移，找到需要的版本，选择对应系统版本下载<br><img src="https://pic.imgdb.cn/item/652d2a04c458853aefd7764e.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>平行时空遇见你</title>
    <link href="/2023/10/09/letter/"/>
    <url>/2023/10/09/letter/</url>
    
    <content type="html"><![CDATA[<p>未来的夫人:<br>&emsp;&emsp;最近还好吗？见字如晤，恰逢中秋佳节，归乡一趟，所见所闻，颇有感慨。乡音未改，却道物是人非。虽未能见汝，但心中甚是惦念。时常在梦中与你相会，谈笑风生，互诉衷肠。与卿相识，实为三生有幸。然每逢深夜，辗转反侧，感慨良多，观吾过往，悠悠二十五载，几近无为。<br>&emsp;&emsp;青春如白驹过隙，二十岁以后的生活仿佛按了加速键，白天好似一具躯壳，夜晚只剩孤独的灵魂独自承受噬心之痛。也终变成了不说，无人可说。<br>&emsp;&emsp;好想与你相见，看看故事的最终答案是什么。至2023年，已然到了结婚的年纪。身边好友同事都陆续结婚生子，父母的皱纹也平添了许多，每一缕青丝白发似乎都在告诉我而立之年将至。想想自己所经历的这几年，每一件事都历历在目。可往往事与愿违，身体状态不如之前，感情之路颇为不顺。快餐式的爱情我为之不屑，三观一致臭味相投才是良配。或许我也期盼有人的突然出现，但又怕那人的突然出现。怕自己的不完美，也怕伤害到别人，这大抵就是我的心事。也望在我正青春时，倾尽所有，与人相爱，共守一生。<br>&emsp;&emsp;好了，夜深了。今天杂乱无章的信就写到这里，很想真正依偎在你怀里，吐露心声，如果未来的你收到，那也算与你共度了此刻，这便是我最幸福的时刻。</p>]]></content>
    
    
    <categories>
      
      <category>随记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>letter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用装机软件下载</title>
    <link href="/2023/10/01/application/"/>
    <url>/2023/10/01/application/</url>
    
    <content type="html"><![CDATA[<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><strong>Windows</strong></h3><h4 id="聊天软件"><a href="#聊天软件" class="headerlink" title="聊天软件"></a>聊天软件</h4><table><thead><tr><th align="center"><a href="https://im.qq.com/index/#downloadAnchor">QQ</a></th><th align="center"><a href="https://weixin.qq.com/">微信</a></th><th align="center"><a href="https://im.qq.com/index/#downloadAnchor">TIM</a></th></tr></thead></table><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><p><a href=""></a><a href=""></a><a href=""></a><a href=""></a></p><table><thead><tr><th align="center"><a href="https://www.google.cn/chrome/index.html">Google</a></th><th align="center"><a href="https://www.mozilla.org/">Firefox</a></th><th align="center"><a href="https://www.microsoft.com/zh-cn/edge/welcome?exp=e155&form=MT00A8">Edge</a></th><th align="center"><a href="https://browser.360.cn/ee/index.html?from=mac">360极速浏览器</a></th></tr></thead></table><h4 id="其它软件"><a href="#其它软件" class="headerlink" title="其它软件"></a>其它软件</h4><table><thead><tr><th align="center"><a href="https://www.wps.cn/">WPS</a></th><th align="center"><a href="https://www.huorong.cn/">火绒安全</a></th><th align="center"><a href="https://7-zip.org/">7-Zip</a></th><th align="center"><a href="https://www.360totalsecurity.com/360zip/">360压缩-国际版</a></th><th align="center"><a href="https://qq.pinyin.cn/">QQ输入法</a></th></tr></thead><tbody><tr><td align="center"><a href="https://dl.xunlei.com/">迅雷</a></td><td align="center"><a href="https://github.com/kkkgo/LTSC-Add-MicrosoftStore/archive/refs/tags/2019.zip">LTSC-Add-MicrosoftStore</a></td><td align="center"><a href="https://www.voidtools.com/zh-cn/">Everything</a></td><td align="center"><a href="https://zh.snipaste.com/">Snipaste</a></td><td align="center"><a href="https://www.chuyu.me/">Dism++</a></td></tr><tr><td align="center"><a href="https://geekuninstaller.com/">Geek Uninstaller</a></td><td align="center"><a href="http://www.uderzo.it/main_products/space_sniffer/">SpaceSniffer</a></td><td align="center"><a href="https://www.videolan.org/vlc/">VLC</a></td><td align="center"><a href="https://pan.baidu.com/">百度网盘</a></td><td align="center"><a href="https://www.aliyundrive.com/">阿里云盘</a></td></tr><tr><td align="center"><a href="https://learn.microsoft.com/zh-cn/windows/powertoys/">PowerToys</a></td><td align="center"><a href="https://gitee.com/cxasm/notepad--/releases/tag/v2.8">notepad—</a></td><td align="center"><a href="https://anytxt.net/">AnyTXT Searcher</a></td><td align="center"><a href="https://easinote.seewo.com/">希沃白板</a></td><td align="center"><a href="https://www.microsoft.com/zh-cn/bing/bing-wallpaper">必应壁纸</a></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Application</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Application</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用PE下载</title>
    <link href="/2023/10/01/PE-ISO/"/>
    <url>/2023/10/01/PE-ISO/</url>
    
    <content type="html"><![CDATA[<p>WEPE</p><p>版本：V2.3<br>下载链接：<a href="https://mirrors.sdu.edu.cn/software/Windows/WePE/WePE_64_V2.3.exe">64位下载–山东大学镜像站</a></p><p>FirPE</p><p>版本：V1.8.2<br>下载链接：<a href="https://www.aliyundrive.com/s/PrQGSRVkeHf">阿里云盘</a></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>ISO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用Windows操作系统镜像下载地址</title>
    <link href="/2023/10/01/Windows-ISO/"/>
    <url>/2023/10/01/Windows-ISO/</url>
    
    <content type="html"><![CDATA[<p><strong>Windows 11</strong></p><hr><p>版本：Windows 11 (business editions), version 22H2 (updated Sep 2023) (x64) - DVD (Chinese-Simplified)</p><p>校验信息：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">文件：zh-c<span class="hljs-symbol">n_windows_11</span>_busi<span class="hljs-symbol">ness_editions_version_22</span>h<span class="hljs-number">2</span>_updated_sep_<span class="hljs-number">2023</span>_x<span class="hljs-number">64</span>_dvd_<span class="hljs-number">6</span>e<span class="hljs-number">779</span>ec<span class="hljs-number">7.</span>iso<br>大小：<span class="hljs-number">5.69</span>GB<br>MD<span class="hljs-number">5</span>：F<span class="hljs-number">2</span>CC<span class="hljs-number">265</span>A<span class="hljs-number">742209</span>A<span class="hljs-number">6</span>D<span class="hljs-number">736</span>FCD<span class="hljs-number">622</span>EF<span class="hljs-number">40</span>A<span class="hljs-number">5</span><br>SHA<span class="hljs-number">1</span>：<span class="hljs-number">56</span>BAFF<span class="hljs-number">06</span>E<span class="hljs-number">93</span>B<span class="hljs-number">5</span>AB<span class="hljs-number">38</span>C<span class="hljs-number">0</span>EC<span class="hljs-number">90</span>B<span class="hljs-number">187727540</span>FAA<span class="hljs-number">0</span>D<span class="hljs-number">1</span>A<br>SHA<span class="hljs-number">256</span>：C<span class="hljs-number">8</span>DB<span class="hljs-number">333</span>A<span class="hljs-number">430</span>A<span class="hljs-number">26634</span>BC<span class="hljs-number">9</span>FF<span class="hljs-number">87</span>A<span class="hljs-number">235</span>E<span class="hljs-number">7371</span>BF<span class="hljs-number">81</span>DB<span class="hljs-number">8</span>EF<span class="hljs-number">0</span>A<span class="hljs-number">0</span>E<span class="hljs-number">7</span>EA<span class="hljs-number">0</span>C<span class="hljs-number">94</span>CD<span class="hljs-number">40</span>AC<span class="hljs-number">1</span>D<span class="hljs-number">246</span><br></code></pre></td></tr></table></figure><p>下载链接：<a href="ed2k://%7Cfile%7Czh-cn_windows_11_business_editions_version_22h2_updated_sep_2023_x64_dvd_6e779ec7.iso%7C6105026560%7CE40A081905041B55452A047F43E39AF0%7C/">ed2k</a></p><hr><p><strong>Windows 10</strong></p><hr><p>版本：Windows 10 Enterprise LTSC 2021 (x64) - DVD (Chinese-Simplified)</p><p>校验信息：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">文件：SW_DVD<span class="hljs-number">9</span>_WI<span class="hljs-symbol">N_ENT_LTSC_2021</span>_<span class="hljs-number">64</span>BIT_Ch<span class="hljs-symbol">nSimp_MLF_X22</span><span class="hljs-number">-84402.</span>ISO<br>大小：<span class="hljs-number">4.7</span>GB<br>MD<span class="hljs-number">5</span>：<span class="hljs-number">2579</span>B<span class="hljs-number">3865</span>C<span class="hljs-number">0591</span>EAD<span class="hljs-number">3</span>A<span class="hljs-number">2</span>B<span class="hljs-number">45</span>AF<span class="hljs-number">3</span>CABEEE<br>SHA<span class="hljs-number">1</span>：C<span class="hljs-number">19</span>D<span class="hljs-number">7</span>DAFBAFEB<span class="hljs-number">26</span>C<span class="hljs-number">36</span>E<span class="hljs-number">31</span>D<span class="hljs-number">97</span>C<span class="hljs-number">465</span>E<span class="hljs-number">87</span>C<span class="hljs-number">7</span>A<span class="hljs-number">6</span>E<span class="hljs-number">8</span>A<span class="hljs-number">4</span>C<br>SHA<span class="hljs-number">256</span>：C<span class="hljs-number">117</span>C<span class="hljs-number">5</span>DDBC<span class="hljs-number">51</span>F<span class="hljs-number">315</span>C<span class="hljs-number">739</span>F<span class="hljs-number">9321</span>D<span class="hljs-number">4907</span>FA<span class="hljs-number">50090</span>BA<span class="hljs-number">7</span>B<span class="hljs-number">48</span>E<span class="hljs-number">7</span>E<span class="hljs-number">9</span>A<span class="hljs-number">2</span>D<span class="hljs-number">173</span>D<span class="hljs-number">49</span>EF<span class="hljs-number">2</span>F<span class="hljs-number">73</span>A<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>下载链接：<a href="ed2k://%7Cfile%7CSW_DVD9_WIN_ENT_LTSC_2021_64BIT_ChnSimp_MLF_X22-84402.ISO%7C5044211712%7C1555B7DCA052B5958EE68DB58A42408D%7C/">ed2k</a> <a href="magnet:?xt=urn:btih:366ADAA52FB3639B17D73718DD5F9E3EE9477B40&dn=SW_DVD9_WIN_ENT_LTSC_2021_64BIT_ChnSimp_MLF_X22-84402.ISO&xl=5044211712">bt</a></p><hr><p>版本：Windows 10 Enterprise LTSC 2019 (x64) - DVD (Chinese-Simplified)</p><p>校验信息：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">文件：cn_windows_<span class="hljs-number">10</span>_enterprise_ltsc_<span class="hljs-number">2019</span>_x<span class="hljs-number">64</span>_dvd_<span class="hljs-number">9</span><span class="hljs-keyword">c</span><span class="hljs-number">09</span>ff<span class="hljs-number">24</span>.iso<br>大小：<span class="hljs-number">4.17</span>GB<br>SHA<span class="hljs-number">1</span>：<span class="hljs-number">24</span>b<span class="hljs-number">59706</span>d<span class="hljs-number">5</span>eded<span class="hljs-number">392423936</span><span class="hljs-keyword">c</span><span class="hljs-number">82</span>ba<span class="hljs-number">5</span>a<span class="hljs-number">83596</span>b<span class="hljs-number">50</span><span class="hljs-keyword">cc</span><br></code></pre></td></tr></table></figure><p>下载链接：<a href="ed2k://%7Cfile%7Ccn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso%7C4478906368%7CE7C526499308841A4A6D116C857DB669%7C/">ed2k</a></p><hr><p><strong>Windows 7</strong></p><hr><p>版本：Windows 7 Ultimate with Service Pack 1 (x64) - DVD (Chinese-Simplified)</p><p>校验信息：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">文件：cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso<br>大小：<span class="hljs-number">3</span>.<span class="hljs-number">19</span>GB<br>SHA1：<span class="hljs-number">2</span>CE0B2DB34D76ED3F697CE148CB75<span class="hljs-number">94432405E23</span><br></code></pre></td></tr></table></figure><p>下载链接：<a href="ed2k://%7Cfile%7Ccn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso%7C3420557312%7CB58548681854236C7939003B583A8078%7C/">ed2k</a></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>ISO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-分类&amp;标签应用</title>
    <link href="/2023/09/26/hexo-extra/"/>
    <url>/2023/09/26/hexo-extra/</url>
    
    <content type="html"><![CDATA[<blockquote><p>指令解析</p></blockquote><p>根据scaffolds模板下的page文件创建相应的分类或者标签概念</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> xxx<br></code></pre></td></tr></table></figure><p>该指令执行完成会在source下相应生成一个xxx文件夹（内有一个index.md文件）</p><h2 id="1-分类-标签创建"><a href="#1-分类-标签创建" class="headerlink" title="1.分类&amp;标签创建"></a>1.分类&amp;标签创建</h2><h3 id="分类创建"><a href="#分类创建" class="headerlink" title="分类创建"></a>分类创建</h3><blockquote><p>创建分类页面</p></blockquote><p>执行命令创建分类</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> categories<br></code></pre></td></tr></table></figure><p>构建完成：categories&#x2F;index.md对应内容</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> categories<br><span class="hljs-symbol">date:</span> xxxx-xx-xx xx:xx:xx<br></code></pre></td></tr></table></figure><p>修改index.md文件，将页面类型设置为 categories ，主题将自动为这个页面显示所有分类（可根据自身需求配置相关内容）</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> categories<br><span class="hljs-symbol">date:</span> xxxx-xx-xx xx:xx:xx<br><span class="hljs-symbol">type:</span> <span class="hljs-string">&quot;categories&quot;</span><br></code></pre></td></tr></table></figure><h3 id="标签创建"><a href="#标签创建" class="headerlink" title="标签创建"></a>标签创建</h3><blockquote><p>创建标签页面</p></blockquote><p>执行命令创建标签</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> tags<br></code></pre></td></tr></table></figure><p>构建完成：tags&#x2F;index.md对应内容</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> tags<br><span class="hljs-symbol">date:</span> xxxx-xx-xx xx:xx:xx<br></code></pre></td></tr></table></figure><p>改index.md文件，将页面类型设置为 tags，主题将自动为这个页面显示所有标签（可根据自身需求配置相关内容）</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> tags<br><span class="hljs-symbol">date:</span> xxxx-xx-xx xx:xx:xx<br><span class="hljs-symbol">type:</span> <span class="hljs-string">&quot;tags&quot;</span><br></code></pre></td></tr></table></figure><h2 id="2-分类-标签应用"><a href="#2-分类-标签应用" class="headerlink" title="2.分类&amp;标签应用"></a>2.分类&amp;标签应用</h2><h4 id="在文章中配置分类和标签"><a href="#在文章中配置分类和标签" class="headerlink" title="在文章中配置分类和标签"></a>在文章中配置分类和标签</h4><p>​创建一个文章，编辑front-matter，设定相应的分类和标签信息，注意区分分类、标签的层次关系<br>​只有文章支持分类和标签，可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性；而标签没有顺序和层次。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: 个人博客<br>categories: <br>    - java-note<br>    - base<br><span class="hljs-keyword">tags:</span> <br>    - java<br>    - database<br>date: xxx-xx-xx xx:xx:xx<br>updated: xxx-xx-xx xx:xx:xx<br></code></pre></td></tr></table></figure><p>​ 预览文章内容，显示信息。</p><h4 id="多级分类构建"><a href="#多级分类构建" class="headerlink" title="多级分类构建"></a>多级分类构建</h4><blockquote><p>多级分类构建</p></blockquote><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">categories</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">[java-note, base]</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">[java-note, database]</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">[vue-note]</span><br></code></pre></td></tr></table></figure><p>上述分类为：java-note下有base、database两个子分类，而vue-note没有子分类。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro安装后基本配置</title>
    <link href="/2023/09/26/Manjaro-settings/"/>
    <url>/2023/09/26/Manjaro-settings/</url>
    
    <content type="html"><![CDATA[<p><strong>1.设置官方镜像源</strong><br><code>$ sudo pacman-mirrors -i -c China -m rank</code><br>输入以上命令后会有弹出框，选择一个国内镜像(推荐中国科技大学的镜像源<a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn</a>)</p><p><strong>2.升级系统及编辑器</strong><br><code>$ sudo pacman -Syyu &amp;&amp; sudo pacman -S vim</code></p><p><strong>3.添加archlinuxcn源</strong><br><code>$ sudo vim /etc/pacman.conf</code><br>文件底部添加以下几行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[archlinuxcn]</span><br><span class="hljs-attr">SigLevel</span> = Optional TrustedOnly  <br><span class="hljs-attr">Server</span> = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>修改文件后，执行以下命令<br><code>$ sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</code></p><p><strong>4.安装输入法</strong>(基于 fcitx 的搜狗输入法)<br><code>$ sudo pacman -S fcitx-im fcitx-configtool fcitx-sogoupinyin</code><br>添加输入法配置文件<br><code>$ vim ~/.xprofile</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">GTK_IM_MODULE</span>=fcitx<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">QT_IM_MODULE</span>=fcitx<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">XMODIFIERS</span>=<span class="hljs-string">&quot;@im=fcitx&quot;</span><br></code></pre></td></tr></table></figure><p>重启即可正常使用输入法</p><p>5.安装常用软件(按需安装)<br><code>$ sudo pacman -S deepin.com.qq.office deepin.com.qq.im netease-cloud-music wps-office ttf-wps-fonts yay google-chrome</code><br><code>$ yay -S deepin-wine-wechat</code></p><p>deepin.com.qq.office [QQ]<br>deepin.com.qq.im [TIM]<br>netease-cloud-music [网易云音乐]<br>wps-office [WPS]<br>ttf-wps-fonts [WPS字体]<br>yay [AUR工具]<br>google-chrome [谷歌浏览器]<br>deepin-wine-wechat [微信]</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx反向代理及设置访问站点密码</title>
    <link href="/2023/09/26/nginx-settings/"/>
    <url>/2023/09/26/nginx-settings/</url>
    
    <content type="html"><![CDATA[<p>1.在&#x2F;etc&#x2F;nginx&#x2F;conf.d目录下修改站点配置文件,修改完成后重启服务</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">server</span> &#123;<br>        <span class="hljs-keyword">listen</span> <span class="hljs-number">80</span>;<br>        server_name <span class="hljs-keyword">admin</span>.service.com;<br>        <span class="hljs-keyword">location</span> / &#123;<br>               proxy_pass http://<span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.123</span>:<span class="hljs-number">8090</span>;<br>               <span class="hljs-keyword">index</span> <span class="hljs-keyword">index</span>.jsp <span class="hljs-keyword">index</span>.html <span class="hljs-keyword">index</span>.htm;<br>        &#125;<br>    &#125;<br><br></code></pre></td></tr></table></figure><p>2.安装访问验证工具</p><p>Ubuntu: <code># apt install apache2-utils</code></p><p>CentOS: <code># yum install httpd-tools</code></p><p>3.设置验证用户名及密码</p><p><code># mkdir -p /usr/local/src/nginx/</code></p><p><code># htpasswd -c /usr/local/src/nginx/passwd admis</code><br>passwd为密码文件，admis为用户名</p><p>4.修改nginx站点配置文件,修改完成后重启nginx服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">server &#123;  <br>     listen <span class="hljs-number">80</span>;  <br>     server_name  localhost;  <br>     …….  <br>     <span class="hljs-comment">#新增下面两行  </span><br>     auth_basic <span class="hljs-string">&quot;Please input password&quot;</span>; <span class="hljs-comment">#这里是验证时的提示信息  </span><br>     auth_basic_user_file <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/src/</span>nginx/passwd;  <br>     location /&#123;  <br>     …….  <br> &#125;<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Debian10缺少iwlwifi固件无法使用无线网络解决办法</title>
    <link href="/2023/09/26/debian-extra/"/>
    <url>/2023/09/26/debian-extra/</url>
    
    <content type="html"><![CDATA[<p><strong>解决过程：</strong></p><p>1.使用有线网络连接到互联网;</p><p>2.编辑Debian10的软件源配置文件</p><p><code>$ sudo vim /etc/apt/sources.list</code></p><p>将<code>non-free</code>添加到源的后面</p><p>3.更新源</p><p><code>$ sudo apt update</code></p><p>4.安装firmware-iwlwifi包</p><p><code>$ sudo apt install firmware-iwlwifi</code></p><p>5.加载模块</p><p><code>$ sudo modprobe -r iwlwifi</code></p><p><code>$ sudo modprobe iwlwifi</code></p><p><strong>说明：</strong>Debian是一个开源操作系统。因此，在安装Debian的时候，默认只安装自由软件，而非自由软件（non-free）则不会被默认安装。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>owncloud安装后常见配置问题</title>
    <link href="/2023/09/26/owncloud-extra/"/>
    <url>/2023/09/26/owncloud-extra/</url>
    
    <content type="html"><![CDATA[<p>1.PHP 的设置似乎有问题, 无法获取系统环境变量. 使用 getenv(\”PATH\”) 测试时仅返回空结果。</p><p>编辑<code>/etc/php/7.3/fpm/php-fpm.conf</code>配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">env[<span class="hljs-variable constant_">PATH</span>] = <span class="hljs-regexp">/usr/local</span><span class="hljs-regexp">/bin:/usr</span><span class="hljs-regexp">/bin:/bin</span><span class="hljs-symbol">:/usr/local/php/bin</span><br></code></pre></td></tr></table></figure><p>将上面的代码粘贴到配置文件的最后一行，重启php7.3-fpm</p><p>2.HTTP 严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用 HSTS。</p><p>编辑网站的配置文件“vhost.conf”文件找到对应网站的433端口段添加下面代码（保存后重启nginx）</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">add_header <span class="hljs-keyword">Strict</span>-Transport-<span class="hljs-keyword">Security</span> &quot;max-age=63072000; includeSubdomains; preload&quot;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux安装教程</title>
    <link href="/2023/09/26/Arch-install/"/>
    <url>/2023/09/26/Arch-install/</url>
    
    <content type="html"><![CDATA[<p><strong>一、准备工作</strong></p><p>1.下载arch最新安装镜像;</p><p>2.烧录镜像至U盘（4G或8G）</p><p>Linux:</p><p><code>$ sudo dd bs=4M if=archlinux-2020.01.01-x86_64.iso of=/dev/sdc</code> </p><p>Windows:<br>使用rufus,模式选择dd</p><p><strong>二、启动到live环境</strong></p><p><strong>1.进入装机环境</strong></p><p><strong>2.验证启动模式</strong><br><code># ls /sys/firmware/efi/efivars</code><br>如果目录不为空，说明当前系统是以UEFI模式启动的，如果目录不存在，系统可能以 BIOS或 CSM 模式启动</p><p><strong>3.连接到互联网</strong><br>a.启动dhcp服务<br><code># systemctl start dhcpcd</code><br>b.查看网络连接<br><code># ip a</code><br>c.检查网络连通性<br><code># ping -c 3 www.baidu.com</code></p><p><strong>4.更新系统时间</strong><br><code># timedatectl set-ntp true</code></p><p><strong>5.硬盘分区</strong></p><p><strong>查看硬盘信息</strong><br><code># lsblk</code></p><p><strong>分区示例</strong>(磁盘以sda为例)</p><p><strong>BIOS和MBR</strong></p><table><thead><tr><th>挂载点</th><th>分区</th><th>分区类型</th><th>建议大小</th></tr></thead><tbody><tr><td>&#x2F;mnt</td><td>&#x2F;dev&#x2F;sda1</td><td>Linux</td><td>剩余空间</td></tr><tr><td>[SWAP]</td><td>&#x2F;dev&#x2F;sda2</td><td>Linux swap (交换空间)</td><td>大于 512 MiB</td></tr></tbody></table><p><strong>UEFI with GPT</strong></p><table><thead><tr><th>挂载点</th><th>分区</th><th>分区类型</th><th>建议大小</th></tr></thead><tbody><tr><td>&#x2F;mnt&#x2F;boot&#x2F;efi</td><td>&#x2F;dev&#x2F;sda1</td><td>EFI 系统分区</td><td>260–512 MiB</td></tr><tr><td>&#x2F;mnt</td><td>&#x2F;dev&#x2F;sda2</td><td>Linux x86-64 根目录 (&#x2F;)</td><td>剩余空间</td></tr><tr><td>[SWAP]</td><td>&#x2F;dev&#x2F;sda3</td><td>Linux swap (交换空间)</td><td>大于 512 MiB</td></tr></tbody></table><ul><li>请使用 cfdisk 或 parted 修改分区表，例如 <code># cfdisk /dev/sda</code></li><li>如果文件系统支持，交换空间也可以设在交换文件上。</li></ul><p><strong>6.格式化分区</strong>(磁盘以sda为例)<br>当分区建立好了，这些分区都需要使用适当的文件系统进行格式化。举例,如果根分区在 &#x2F;dev&#x2F;sda2 上并且会使用 <em>ext4</em> 文件系统，efi分区在&#x2F;dev&#x2F;sda1上，运行：<br><code># mkfs.fat -F32 /dev/sda1</code> efi分区<br><code># mkfs.*ext4* /dev/sda2</code> &#x2F;分区<br>如果您创建了交换分区（例如 &#x2F;dev&#x2F;sda3），使用 mkswap 将其初始化：<br><code># mkswap /dev/sda3</code><br><code># swapon /dev/sda3</code></p><p><strong>7.挂载分区</strong>(磁盘以sda为例)<br>将根分区挂载到 <code>/mnt</code>，例如：<br><code># mount /dev/sda2 /mnt</code><br>创建其他剩余的挂载点（比如 <code>/mnt/boot/efi</code>）并挂载其相应的分区。<br><code># mkdir /mnt/boot/efi -p   # mount /dev/sda1 /mnt/boot/efi</code><br>接下来 genfstab 将会自动检测挂载的文件系统和交换空间。</p><p><strong>三、安装系统</strong></p><p><strong>1.选择镜像</strong><br>文件 <code>/etc/pacman.d/mirrorlist</code> 定义了软件包会从哪个镜像源下载。在 LiveCD 启动的系统上，所有的镜像都被启用，并且在镜像被制作时，我们已经通过他们的同步情况和速度排序。<br>在列表中越前的镜像在下载软件包时有越高的优先权。你可以相应的修改文件 <code>/etc/pacman.d/mirrorlist</code>，并<strong>将地理位置最近的镜像源挪到文件的头部</strong>，同时你也应该考虑一些其他标准。<br>这个文件接下来还会被 <em>pacstrap</em> 拷贝到新系统里，所以请确保设置正确。<br>例：<br><code># vim /etc/pacman.d/mirrorlist</code>  </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">Server = https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p><strong>2.安装必须的软件包</strong><br><code># pacstrap /mnt base base-devel linux linux-firmware vim</code></p><p><strong>四、配置系统</strong></p><p><strong>1.Fstab</strong><br>用以下命令生成fstab文件 (用 <code>-U</code> 或 <code>-L</code> 选项设置UUID 或卷标)：<br><code># genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code><br><strong>强烈建议</strong> 在执行完以上命令后，后检查一下生成的 <code>/mnt/etc/fstab</code> 文件是否正确。</p><p><strong>2.Chroot</strong><br>Change root 到新安装的系统：<br><code># arch-chroot /mnt</code></p><p><strong>3.设置时区</strong><br><code># ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code><br><code># hwclock --systohc --localtime</code></p><p><strong>4.本地化</strong><br>本地化的程序要本地化文本，都依赖 Locale，后者明确规定地域、货币、时区日期的格式、字符排列方式和其他本地化标准等等。在下面两个文件设置：<code>locale.gen</code> 与 <code>locale.conf</code>。<br><code>/etc/locale.gen</code> 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号（<code>＃</code>）即可，建议选择带 <code>UTF-8</code> 的项：<br><code># vim /etc/locale.gen</code>  </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">en_US</span>.UTF-<span class="hljs-number">8</span> UTF-<span class="hljs-number">8</span>  <br><span class="hljs-attribute">zh_CN</span>.UTF-<span class="hljs-number">8</span> UTF-<span class="hljs-number">8</span>  <br><span class="hljs-attribute">zh_TW</span>.UTF-<span class="hljs-number">8</span> UTF-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>接着执行 <code>locale-gen</code> 以生成 locale 信息：<br><code># locale-gen</code></p><p><code>/etc/locale.gen</code> 会生成指定的本地化文件。<br>创建 <code>locale.conf</code> 并编辑 <code>LANG</code> 这一变量,比如将系统 locale 设置为 <code>en_US.UTF-8</code>，系统的 Log 就会用英文显示，这样更容易问题的判断和处理。<br><code># echo LANG=en_US.UTF8 &gt; /etc/locale.conf</code><br><strong>警告:</strong> 不推荐在此设置任何中文 locale，会导致 TTY 乱码。</p><p><strong>5.设置网络</strong><br>a.创建 hostname 文件<br><code># vim /etc/hostname</code>  </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">myhostname</span><br></code></pre></td></tr></table></figure><p>b.添加对应的信息到 hosts:<br><code># vim /etc/hosts</code>  </p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span> localhost  <br>::<span class="hljs-number">1</span> localhost  <br><span class="hljs-number">127.0.1.1</span> myhostname.localdomain myhostname<br></code></pre></td></tr></table></figure><p><strong>6.用户配置</strong><br>a.修改root密码<br><code># passwd root</code><br>b.创建新用户(merlin是新建的用户名)<br><code># useradd -m -G wheel merlin</code><br>c.修改用户密码<br><code># passwd merlin</code><br>d.修改sudo权限<br><code># visudo</code><br>去掉<code># %wheel ALL=(ALL) ALL</code> 前面的注释</p><p><strong>7.其它配置</strong><br>a.<em>有线连接</em><br><code># systemctl enable dhcpcd</code>   开机自动启动dhcp服务<br>如果上述命令执行提示错误，执行<code># pacman -S dhcpcd</code><br>b***.***无线连接<br><code># pacman -S iw wpa_supplicant dialog</code></p><p><strong>8.按照系统引导</strong>(sda修改为实际安装磁盘)</p><p><em><strong>BIOS+BMR分区方案引导系统启动</strong></em>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">pacman -S grub</span>   <br><span class="hljs-meta prompt_"># </span><span class="language-bash">grub-install --target=i386-pc /dev/sda</span>   <br><span class="hljs-meta prompt_"># </span><span class="language-bash">grub-mkconfig -o /boot/grub/grub.cfg</span><br></code></pre></td></tr></table></figure><p><strong>UEFI+<em>GPT分区方案引导系统启动</em></strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">pacman -S grub efibootmgr</span>   <br><span class="hljs-meta prompt_"># </span><span class="language-bash">grub-install --target=x86_64-efi /dev/sda</span>    <br><span class="hljs-meta prompt_"># </span><span class="language-bash">grub-mkconfig -o /boot/grub/grub.cfg</span><br></code></pre></td></tr></table></figure><p><strong>五、重启</strong></p><p>输入 <code>exit</code> 或按 <code>Ctrl+d</code> 退出 chroot 环境。<br>可选用 <code>umount -R /mnt</code> 手动卸载被挂载的分区：这有助于发现任何「繁忙」的分区，并通过 <a href="https://jlk.fjfi.cvut.cz/arch/manpages/man/fuser.1">fuser(1)</a> 查找原因。<br>最后，通过执行 <code>reboot</code> 重启系统，<em>systemd</em> 将自动卸载仍然挂载的任何分区。不要忘记移除安装介质，然后使用 root 帐户登录到新系统。</p><p><strong>注意</strong>：本文章基于Arch Wiki修改，<a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">原文链接</a></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KMS命令激活Windows/Office</title>
    <link href="/2023/09/26/active-office/"/>
    <url>/2023/09/26/active-office/</url>
    
    <content type="html"><![CDATA[<p><strong>注意</strong>：以下所有命令均以管理员权限运行</p><p><strong>Windows激活</strong></p><p>1.安装秘钥<br><code>slmgr.vbs -ipk xxxx-xxxx-xxxx-xxxx</code></p><p>2.设置KMS服务器<br><code>slmgr.vbs -skms xxx.xxx.xxx</code></p><p>3.激活Windows<br><code>slmgr.vbs -ato</code></p><p>4.查看激活信息<br><code>slmgr.vbs -xpr</code></p><p><strong>Office激活</strong>(VL版本)</p><p><strong>1.CMD切换到Office安装位置</strong><br>默认安装位置 C:\Program Files\Microsoft Office\Office14<br>office16是office2016<br>office15是office2013<br>office14是office2010<br><code>cd &quot;C:\Program Files\Microsoft Office\Office14&quot;</code></p><p><strong>2.设置KMS服务器</strong><br><code>cscript ospp.vbs /sethst:xxx.xxx.xxx</code></p><p><strong>3.安装Office秘钥</strong><br><code>cscript ospp.vbs /inpkey:xxxxx</code></p><p><strong>4.激活Office</strong><br><code>cscript ospp.vbs /act</code></p><p><strong>可能会用到的ospp.vbs其它命令</strong></p><p><strong>1.卸载秘钥</strong>(xxxxx为秘钥后5位)<br><code>cscript ospp.vbs /unpkey:xxxxx</code><br><strong>2.显示许可证信息</strong><br><code>cscript ospp.vbs /dstatus</code></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Office</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Office</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Let’s Encrypt配置HTTPS</title>
    <link href="/2023/09/26/setting-https/"/>
    <url>/2023/09/26/setting-https/</url>
    
    <content type="html"><![CDATA[<p>注意：教程使用Ubuntu18.04+Nginx</p><p><strong>一、安装Certbot</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs smali">$ sudo<span class="hljs-built_in"> add-apt-repository </span>ppa:certbot/certbot<br>$ sudo apt-get update<br>$ sudo apt-get install certbot  python-certbot-nginx<br></code></pre></td></tr></table></figure><p>如果在执行上述命令时提示命令不存在，可能是没有安装add-apt-repository，请按以下命令安装</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">$ sudo apt-<span class="hljs-built_in">get</span> install python-software-<span class="hljs-built_in">properties</span> software-<span class="hljs-built_in">properties</span>-common <br></code></pre></td></tr></table></figure><p><strong>二、生成证书</strong></p><p>执行以下命令，然后按照提示一步一步操作</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ sudo certbot <span class="hljs-comment">--nginx</span><br></code></pre></td></tr></table></figure><p><strong>备注：</strong><br>privkey.pem 这是私匙，对应Nginx的ssl_certificate_key选项。<br>cert.pem 服务器证书，对应SSLCertificateFile选项。<br>chain.pem 除服务器证书之外的所有证书，Nginx对应ssl_trusted_certificate选项。<br>fullchain.pem 包括上面的服务器证书和其他证书，Nginx对应ssl_certificate选项。</p><p><strong>三、更新证书</strong></p><p>Let’s Encrypt的证书权威且安全，就是有效期只有90天。过期前需要续时间。运行命令<code>sudo certbot renew</code>即可续时间，如果还没到过期时间，运行命令也不会有大碍。当然你可以使用命令测试<code>sudo certbot renew --dry-run</code>。可以根据需要自己写一个脚本或者cron定时更新证书。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>先生，千古</title>
    <link href="/2021/05/22/xsqg/"/>
    <url>/2021/05/22/xsqg/</url>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;一身黑袍的死神提着镰刀摸进了病房内，穿过焦虑不安忙前忙后的医护人员，走到病床前，看了眼床上的老人，又看了眼手上的名单，点了点头，“是时候了。”它说着，架起了镰刀。<br>&emsp;&emsp;然而，镰刀碎了，凭空出现的两个差役将它一路架出了病房，死死地摁在地上。<br>&emsp;&emsp;牛头声音沙哑，“你不准碰他。”<br>&emsp;&emsp;马面泪眼婆娑，“你不配碰他。”<br>&emsp;&emsp;死神不敢动弹，眼睁睁看着门外的记者将刚发的报道撤回。<br>&emsp;&emsp;“我们真的要这么干吗？”黑无常倚在床边，怅然若失，“我们几十年没见过饿死鬼了，都是老人家的功劳。”<br>&emsp;&emsp;白无常表情凝重，无可奈何，“职责如此。”<br>&emsp;&emsp;半晌，钟馗依然没能下定决心，颤抖的手几乎将生死簿捏皱，将朱砂笔折断。<br>&emsp;&emsp;这时，一只苍老而有力的手搭在了钟馗手上。<br>&emsp;&emsp;“该走了吗？”<br>&emsp;&emsp;“不……不是今天……”<br>&emsp;&emsp;“没事，我是人，我懂。”<br>&emsp;&emsp;老人一脸释然，随即又好似想起了什么，问:“抱歉，可否再等一会呢？”<br>&emsp;&emsp;白无常刚想说什么，却被黑无常一把摁住，“可以可以可以，多久都行！”<br>&emsp;&emsp;“不会太久，不会太久……”老人欣慰的笑了，恍惚间他看见了一间间餐馆，一户户百姓，坐在桌前大快朵颐。<br>&emsp;&emsp;片刻后，人们放下了碗筷，眼前的景象也逐渐模糊。<br>&emsp;&emsp;“他们，吃得可好？”老人还有些担忧。<br>&emsp;&emsp;“不能更好。”钟馗泣不成声。<br>&emsp;&emsp;“不，会更好的。”老人笑了，他缓缓站起身，从苍老的身躯中坐起，向病房内哭成泪人的医生护士们，挥了挥已经触摸不到任何事物的手，眼里泛起些许光亮，“待会，记得要吃饭呀”<br>&emsp;&emsp;……<br>&emsp;&emsp;……<br>&emsp;&emsp;……<br>&emsp;&emsp;医院外<br>&emsp;&emsp;一位白色的西方老人仍在纠缠，“我的朋友，你就不能看在我的面子上……”<br>&emsp;&emsp;“他生于华夏。”龙袍加身的帝王用不容置疑的声音反驳。<br>&emsp;&emsp;“噢，可你知道，天堂是个非常好的地方，纯净且美好，只有那里才适合他。”<br>&emsp;&emsp;“他生于华夏。”帝王重复了一遍，随即从袖中取出一袋种子，“这是他一生的心血，倘若你那地域真有如你所述那般美好，定不会再有饥饿。”<br>&emsp;&emsp;白色老者若有所思，终于还算是心满意足的离开了。<br>&emsp;&emsp;目送完白色老者，帝王缓缓转过身，朝着病房的方向郑重的深深鞠了一躬。<br>&emsp;&emsp;“先生，千古。”</p><p>&emsp;&emsp;–B站网友</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
